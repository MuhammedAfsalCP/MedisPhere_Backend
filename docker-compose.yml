version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ message broker
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  ai-diagnostics-service:
    build: ./AI_Diagnostics_Service
    container_name: AI_Diagnostics_Service
    ports:
      - "8000:8000"
    volumes:
      - ./AI_Diagnostics_Service:/app
    depends_on:
      - db
    env_file:
      - .env

  appointment-service:
    build: ./Appointment_Service
    container_name: Appointment_Service
    ports:
      - "8001:8001"
    volumes:
      - ./Appointment_Service:/app
    depends_on:
      - db
    env_file:
      - .env

  notification-service:
    build: ./Notification_Service
    container_name: Notification_Service
    ports:
      - "8002:8002"
    volumes:
      - ./Notification_Service:/app
    depends_on:
      - db
    env_file:
      - .env

  user-service:
    build: ./User_Service
    container_name: User_Service
    ports:
      - "8003:8003"
    volumes:
      - ./User_Service:/app
    depends_on:
      - db
    env_file:
      - .env
    command: >
      sh -c "sleep 10 && python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000 & python app/consumer.py"

  video-call-service:
    build: ./Video_Call_Service
    container_name: Video_Call_Service
    ports:
      - "8004:8004"
    volumes:
      - ./Video_Call_Service:/app
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
